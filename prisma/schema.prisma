// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("manager") // "owner" or "manager"
  isOwner       Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
  monthSelections MonthSelection[]
  dailyReports    DailyReport[]
  stockEntries    StockEntry[]
  staff           Staff[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model MonthSelection {
  id        String   @id @default(cuid())
  month     Int
  year      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy User     @relation(fields: [createdById], references: [id])
  createdById String

  @@index([createdById])
}

model DailyReport {
  id        String   @id @default(cuid())
  date      DateTime
  sales     Float    @default(0)
  credit    Float    @default(0)
  expenses  Float    @default(0)
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy User     @relation(fields: [createdById], references: [id])
  createdById String
}

model StockEntry {
  id        String   @id @default(cuid())
  date      DateTime
  items     Json     // Store items as JSON array
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy User     @relation(fields: [createdById], references: [id])
  createdById String

  @@index([createdById])
}

model Staff {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  country     String
  monthlyFee  Float
  role        String   @default("staff")
  status      String   @default("Active")
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String

  @@index([createdById])
}
